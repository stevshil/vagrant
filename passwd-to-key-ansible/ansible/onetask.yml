- hosts: web
  vars:
    docroot: /usr/share/nginx/html
    docdata: "<h1>Hello world</h1>"
    nginxuser: nginx
    nginxport: 80
    servername: _
  tasks:
  - name: Ensure nginx is installed and latest version
    yum:
     name: nginx
     state: latest
    when: (ansible_distribution == "CentOS")
  - name: Update repositories if cache is older then 5 days
    apt:
      update_cache: yes
      cache_valid_time: 43200
    when: (ansible_distribution == "Ubuntu")
  - name: Ensure nginx is installed and latest version
    apt:
     name: nginx
     state: latest
    when: (ansible_distribution == "Ubuntu")
  - name: Create nginx user if not there
    user:
      name: nginx
      comment: Nginx web server
      shell: /sbin/nologin
      home: /var/lib/nginx
      state: present
    when: (ansible_distribution == "Ubuntu")
  - name: Create index.html
    copy:
      content: "{{ docdata }}"
      dest: "{{ docroot }}/index.html"
  - name: Write main configuration file
    template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
    notify:
    - restart nginx
  - name: Write root configuration
    template:
      src: templates/conf-default.conf.j2
      dest: /etc/nginx/conf.d/default.conf
    notify:
    - restart nginx
  - name: Ensure nginx is started
    service:
      name: nginx
      state: started
      enabled: yes
  - name: Some user accounts
    user:
      name: "{{ item.username }}"
      shell: "{{ item.program }}"
      home: "{{ item.homedir }}"
      state: present
    with_items:
      - { username: 'steve', program: '/bin/bash', homedir: '/home/steve' }
      - { username: 'bob', program: '/bin/zsh', homedir: '/home/bob' }
      - { username: 'kris', program: '/bin/bash', homedir: '/home/kris' }
    
  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
