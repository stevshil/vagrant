# Available back-end worker virtual hosts
# NOTE the use of cleartext unencrypted HTTP.
<Proxy balancer://puppetmaster>
  BalancerMember http://127.0.0.1:18140
  BalancerMember http://127.0.0.1:18141
</Proxy>
 
Listen 8140
<VirtualHost *:8140>
  SSLEngine on
  # SSLCipherSuite SSLv2:-LOW:-EXPORT:RC4+RSA
  SSLProtocol -ALL +SSLv3 +TLSv1
  SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP
  SSLProtocol All -SSLv2
  SSLCipherSuite HIGH:!ADH:RC4+RSA:-MEDIUM:-LOW:-EXP
  # Puppet master should generate initial CA certificate.
  # ensure certs are located in /var/lib/puppet/ssl
  SSLCertificateFile /var/lib/puppet/ssl/certs/puppet-master-1.pem
  SSLCertificateKeyFile /var/lib/puppet/ssl/private_keys/puppet-master-1.pem
  SSLCertificateChainFile /var/lib/puppet/ssl/ca/ca_crt.pem
  SSLCACertificateFile /var/lib/puppet/ssl/ca/ca_crt.pem
  SSLCARevocationFile /var/lib/puppet/ssl/ca/ca_crl.pem
  # optional to allow CSR request, required if certificates distributed to client during provisioning.
  SSLVerifyClient optional
  SSLVerifyDepth 1
  SSLOptions +StdEnvVars
 
  # The following client headers record authentication information for downstream workers.
  RequestHeader set X-SSL-Subject %{SSL_CLIENT_S_DN}e
  RequestHeader set X-Client-DN %{SSL_CLIENT_S_DN}e
  RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e
 
  <Location />
  SetHandler balancer-manager
    Order allow,deny
    Allow from all
  </Location>
 
  ProxyPass / balancer://puppetmaster/
  ProxyPassReverse / balancer://puppetmaster/
  ProxyPreserveHost On
 
</VirtualHost>
